<%- include('./layouts/header'); -%>
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-DJ4YFB14B3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-DJ4YFB14B3');
</script>
<%- include('./layouts/navbar-all'); -%>

<section id="main" class="w-[1100px] lg:px-0 m-auto pb-28">
    <p id="header-firstname" class="lg:pt-8 text-main text-xl font-bold">Hi, Assami.</p>
    <p class="lg:pb-8 text-main font-medium">Let's create new post <span class="text-xs font-normal text-black/60">*the more you post the more you got benefit</span></p>

    <form id="form-create-post" class="min-h-[50vh] border-2 border-main rounded shadow-md py-12 px-20 bg-white noise">
        <div class="flex justify-between gap-4 items-center">
            <div class="relative w-1/2">
                <input type="text" name="title" id="floating-phone-number" class="block py-2.5 pe-0 w-full text-gray-900 font-medium bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " />
                <label for="floating-phone-number" class="absolute text-sm text-main duration-300 transform -translate-y-6 z-10 scale-75 top-3 origin-[0] peer-placeholder-shown:start-4 peer-focus:start-0 peer-focus:text-main peer-focus:dark:text-main peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto">Job Position*</label>
            </div>

            <button class="px-6 py-2 bg-main text-white rounded-lg shadow-md text-sm font-medium">Post this Job !</button>
        </div>

        <hr class="my-8">

        <div class="mt-6 flex flex-col gap-4">
            <div class="">
                <label for="" class="block text-sm font-medium text-black/70 mb-2">COMPANY NAME*</label>
                <input type="text" name="company" class="w-1/2 rounded-lg border-2 border-gray-300 placeholder-black/30" placeholder="Ex. Internshit Corporation" name="" id="">
            </div>
            <div class="">
                <label for="" class="block text-sm font-medium text-black/70 mb-2">JOB TYPE*</label>
                <select type="text" name="type" class="w-1/3 rounded-lg border-2 border-gray-300 placeholder-black/30" placeholder="Ex. Internshit Corporation" name="" id="">
                    <option value="Internship">Internship</option>
                    <option value="Full-Time">Full-Time</option>
                    <option value="Part-Time">Part-Time</option>
                </select>
            </div>


            <!-- LOCATION -->
            <div class="">
                <label for="" class="block text-sm font-medium text-black/70 mb-2">LOCATION*</label>
                <button type="button" id="select-location" data-dropdown-toggle="dropdown-location" data-dropdown-placement="bottom" class="w-1/3 shadow border-2 border-gray-300 text-black/80 bg-white focus:ring-1 focus:outline-none focus:ring-gray-300 rounded-lg px-3 py-2.5 text-center flex justify-between items-center">Search Location <svg class="w-2.5 h-2.5 ms-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
                    </svg>
                </button>
                <!-- Dropdown menu -->
                <div id="dropdown-location" class="border-2 border-main z-10 hidden bg-white rounded-lg shadow w-1/5 dark:bg-gray-700">
                    <div class="p-3">
                        <label for="input-group-search" class="sr-only">Search</label>
                        <div class="relative">
                        <div class="absolute inset-y-0 rtl:inset-r-0 start-0 flex items-center ps-3 pointer-events-none">
                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
                            </svg>
                        </div>
                        <input type="text" class="locations-input block w-full p-2 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search location">
                        </div>
                    </div>
                    <ul id="list-locations" class="h-28 px-3 pb-3 overflow-y-auto text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownSearchButton">
                        <!-- HERE -->
                    </ul>
                    <div class="flex flex-col items-center p-3 text-sm border border-gray-200 rounded-b-lg bg-gray-50">
                        <input type="text" name="" id="" placeholder="Add Unlisted Location" class="w-full border border-gray-300 focus:border-main py-2 rounded-lg text-sm">
                        <button id="button-add-location" type="button" class="text-white text-sm w-full rounded-lg py-2 bg-main mt-2">Add Location</button>
                    </div>
                </div>
            </div>



            <div class="">
                <label for="" class="block text-sm font-medium text-black/70 mb-2">POST LINK*</label>
                <input type="text" name="link" class="w-2/3 rounded-lg border-2 border-gray-300 placeholder-black/30" placeholder="Ex. https://internshit.com/posts/create" name="" id="">
            </div>


            <!-- SKILLS -->
            <div class="">
                <label for="" class="block text-sm font-medium text-black/70 mb-2">SKILLS</label>
                <button type="button" id="dropdownSearchButton" data-dropdown-toggle="dropdownSearch" data-dropdown-placement="bottom" class="shadow border-2 border-gray-300 text-white bg-main hover:bg-main/80 focus:ring-1 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center w-full">Search some skill <svg class="w-2.5 h-2.5 ms-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
                    </svg>
                </button>
                <!-- Dropdown menu -->
                <div id="dropdownSearch" class="w-[50vw] border-2 border-main z-10 hidden bg-white rounded-lg shadow w-1/3 dark:bg-gray-700">
                    <div class="p-3">
                        <label for="input-group-search" class="sr-only">Search</label>
                        <div class="relative">
                        <div class="absolute inset-y-0 rtl:inset-r-0 start-0 flex items-center ps-3 pointer-events-none">
                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
                            </svg>
                        </div>
                        <input type="text" class="skills-input block w-full p-2 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search user">
                        </div>
                    </div>
                    <ul id="list-skills" class="h-28 px-3 pb-3 overflow-y-auto text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownSearchButton">
                        <!-- HERE -->
                    </ul>
                    <div class="flex flex-col items-center p-3 text-sm border border-gray-200 rounded-b-lg bg-gray-50">
                        <input type="text" name="" id="" placeholder="Add Unlisted Skill" class="w-full border border-gray-300 focus:border-main py-2 rounded-lg text-sm">
                        <button id="button-add-skill" type="button" class="text-white text-sm w-full rounded-lg py-2 bg-main mt-2">Add Skill</button>
                    </div>
                </div>

            </div>
            <div id="active-skills" class="w-full p-5 rounded-lg bg-background noise">
                <!-- HERE -->
            </div>





            <div class="">
                <label for="" class="block text-sm font-medium text-black/70 mb-2">POSTED DATE*</label>
                <div class="relative max-w-sm">
                    <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
                       <svg class="w-4 h-4 text-gray-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"/>
                        </svg>
                    </div>
                    <input name="post_date" autocomplete="off" id="datepicker-autohide" datepicker datepicker-autohide type="text" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Select date">
                </div>
            </div>
            <div class="">
                <label for="" class="block text-sm font-medium text-black/70 mb-2">PLATFORM*</label>
                <select name="platform" type="text" class="w-1/4 rounded-lg border-2 border-gray-300 placeholder-black/30" placeholder="Ex. Internshit Corporation" name="" id="">
                    <option value="Jobstreet">Jobstreet</option>
                    <option value="Kalibrr">Kalibrr</option>
                    <option value="Glints">Glints</option>
                    <option value="Indeed">Indeed</option>
                    <option value="Linkedin">Linkedin</option>
                    <option value="Other">Other</option>
                </select>
            </div>
            <div class="">
                <label for="" class="block text-sm font-medium text-black/70 mb-2">JOB OVERVIEW</label>
                <div id="create-post-editor" class="w-full rounded-b-lg bg-white"></div>
            </div>
        </div>
    </form>
</section>

<%- include('./layouts/footer'); -%>

<script>

    let checkedStatusSkills = {}
    let checkedStatusLocations = {}
    const quill = new Quill('#create-post-editor', {
        theme: 'snow'
    });

    
    let SKILLS_CHECKED = []
    let SELECTED_LOCATION = ""


    // ------------------ SKILLS ----------------------

    $.get("/api/v1/users/skills", function(skillData){
        skillData = decrypt(skillData.r)
        skillData.forEach(skill => {
            $("#list-skills").append(`
                <li>
                    <div class="flex items-center ps-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600">
                        <p style="display:none">${skill.id}</p>
                        <input id="checkbox-${skill.id}" type="checkbox" value="" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-700 dark:focus:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500">
                        <label for="checkbox-${skill.id}" class="w-full py-2 ms-2 text-sm font-medium text-gray-900 rounded dark:text-gray-300">${skill.skill}</label>
                    </div>
                </li>
            `)
        });

        $(".skills-input").on("input", function(){
            const INPUT = $(this).val().toLowerCase(); // Ambil nilai input dalam lowercase
            $("#list-skills").html(""); // Kosongkan daftar institusi

            // Filter institusi berdasarkan nilai input
            const filteredSkills = skillData.filter(skill => {
                return skill.skill.toLowerCase().includes(INPUT);
            });

            // Tampilkan hasil filter
            filteredSkills.forEach(skill => {
                const isChecked = checkedStatusSkills[skill.skill.toLowerCase()] ? 'checked' : ''; // Cek apakah checkbox harus dicentang
                $("#list-skills").append(`
                    <li>
                        <div class="flex items-center ps-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600">
                            <p style="display:none">${skill.id}</p>
                            <input id="checkbox-${skill.id}" type="checkbox" ${isChecked} value="" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-700 dark:focus:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500">
                            <label for="checkbox-${skill.id}" class="w-full py-2 ms-2 text-sm font-medium text-gray-900 rounded dark:text-gray-300">${skill.skill}</label>
                        </div>
                    </li>
                `);
            });
        });
    })

    $("#button-add-skill").click(function() {
        const INPUT_SKILL = $(this).prev().val();
        const formData = new FormData();

        // Menambahkan data ke formData dengan format yang benar
        formData.append("skill", INPUT_SKILL);

        $.ajax({
            url: "/api/v1/users/skills",
            type: "POST",
            data: formData,  // Menggunakan formData langsung di sini
            processData: false,  // Tidak memproses data secara otomatis
            contentType: false,  // Tidak mengatur tipe konten secara otomatis
            headers: {
                "Authorization": window.USER_TOKEN,
            },
            success: (response) => {
                const SKILL = decrypt(response.r)
                $(this).prev().val("")
                document.getElementById("list-skills").scrollTo(0, 0);
                $("#list-skills").prepend(`
                    <li>
                        <div class="flex items-center ps-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600">
                            <p style="display:none">${SKILL.id}</p>
                            <input id="checkbox-${SKILL.id}" type="checkbox" value="" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-700 dark:focus:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500">
                            <label for="checkbox-${SKILL.id}" class="w-full py-2 ms-2 text-sm font-medium text-gray-900 rounded dark:text-gray-300">${SKILL.skill}</label>
                        </div>
                    </li>
                `)
            },
            error: function(request, status, error) {
                console.error(request, status, error);  // Memperbaiki cara menangani error
            },
        });
    });

    $("#list-skills").on("change", "input[type=checkbox]", function(){
        const SKILL_ID = $(this).prev().text();
        const LABEL = $(this).next().text();

        if($(this).is(":checked")){
            SKILLS_CHECKED.push(SKILL_ID)
            $("#active-skills").append(`
                <button id="button-${SKILL_ID}" type="button" class="m-1 text-black/80 px-4 py-1 rounded-lg bg-main text-white">${LABEL}</button>
            `)
        }else{
            $(`#button-${SKILL_ID}`).remove()
            removeFromArray(SKILL_ID)
        }
        checkedStatusSkills[LABEL.toLowerCase()] = $(this).prop("checked");
    })
    








    // ------------------ LOCATION -------------------

    $.get("/api/v1/users/locations", function(locationsData){
        locationsData = decrypt(locationsData.r)
        locationsData.forEach(location => {
            $("#list-locations").append(`
                <li>
                    <div class="flex items-center ps-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600">
                        <p style="display:none">${location.id}</p>
                        <input id="radio-${location.id}" name="location" type="radio" value="" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded-full focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-700 dark:focus:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500">
                        <label for="radio-${location.id}" class="w-full py-2 ms-2 font-medium text-gray-900 rounded dark:text-gray-300">${location.location}</label>
                    </div>
                </li>
            `)
        });

        $(".locations-input").on("input", function(){
            const INPUT = $(this).val().toLowerCase(); // Ambil nilai input dalam lowercase
            $("#list-locations").html(""); // Kosongkan daftar institusi

            // Filter institusi berdasarkan nilai input
            const filteredLocations = locationsData.filter(location => {
                return location.location.toLowerCase().includes(INPUT);
            });

            // Tampilkan hasil filter
            filteredLocations.forEach(location => {
                const isChecked = checkedStatusLocations[location.location.toLowerCase()] ? 'checked' : ''; // Cek apakah checkbox harus dicentang
                $("#list-locations").append(`
                    <li>
                        <div class="flex items-center ps-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600">
                            <p style="display:none">${location.id}</p>
                            <input id="radio-${location.id}" ${isChecked} name="location" type="radio" value="" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded-full focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-700 dark:focus:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500">
                            <label for="checkbox-${location.id}" class="w-full py-2 ms-2 text-sm font-medium text-gray-900 rounded dark:text-gray-300">${location.location}</label>
                        </div>
                    </li>
                `);
            });
        });
    })

    $("#button-add-location").click(function() {
        const INPUT_LOCATION = $(this).prev().val();
        const formData = new FormData();

        // Menambahkan data ke formData dengan format yang benar
        formData.append("location", INPUT_LOCATION);

        $.ajax({
            url: "/api/v1/users/locations",
            type: "POST",
            data: formData,  // Menggunakan formData langsung di sini
            processData: false,  // Tidak memproses data secara otomatis
            contentType: false,  // Tidak mengatur tipe konten secara otomatis
            headers: {
                "Authorization": window.USER_TOKEN,
            },
            success: (response) => {
                const LOCATION = decrypt(response.r)
                $(this).prev().val("")
                document.getElementById("list-locations").scrollTo(0, 0);
                $("#list-locations").prepend(`
                    <li>
                        <div class="flex items-center ps-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600">
                            <p style="display:none">${LOCATION.id}</p>
                            <input id="radio-${LOCATION.id}" name="location" type="radio" value="" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded-full focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-700 dark:focus:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500">
                            <label for="radio-${LOCATION.id}" class="w-full py-2 ms-2 font-medium text-gray-900 rounded dark:text-gray-300">${LOCATION.location}</label>
                        </div>
                    </li>
                `)
            },
            error: function(request, status, error) {
                console.error(request, status, error);  // Memperbaiki cara menangani error
            },
        });
    });

    $("#list-locations").on("change", "input[type=radio]", function(){
        const SKILL_ID = $(this).prev().text();
        const LABEL = $(this).next().text();
        SELECTED_LOCATION = LABEL

        $("#select-location").html(`${LABEL} <svg class="w-2.5 h-2.5 ms-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
        </svg>`)
        checkedStatusLocations[LABEL.toLowerCase()] = $(this).prop("checked");
    })




    
    
    function removeFromArray(valueToRemove) {
        SKILLS_CHECKED = SKILLS_CHECKED.filter(item => item !== valueToRemove);
    }

    $("#form-create-post").submit(function(e){
        e.preventDefault()

        const formData = new FormData($(this)[0])
        formData.append("skills", SKILLS_CHECKED)
        formData.set("location", SELECTED_LOCATION)
        formData.append("overview", quill.getSemanticHTML())

        $.ajax({
            url: "/api/v1/posts",
            type: "POST",
            data: formData,
            async: false,
            cache: false,
            contentType: false,
            encrypt: "multipart/form-data",
            processData: false,
            headers: {
                "Authorization": window.USER_TOKEN,
            },
            success: (response) => {
                location.reload()
            },
            error: function (request, status, error) {
                alert(request.responseJSON.message)
            },
        });
    })







    const decrypt = (data, keys='<%= process.env.AES_KEYS %>') => {
        let bytes = CryptoJS.AES.decrypt(data, keys)
        return JSON.parse(bytes.toString(CryptoJS.enc.Utf8))
    }
</script>